// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Component Not showing Home component: App_1.test.tsx.snap 1`] = `
<View
  style={
    {
      "backgroundColor": "black",
      "paddingTop": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="Open"
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Open
      </Text>
    </View>
  </View>
</View>
`;

exports[`App Component should show home component: App_2.test.tsx.snap 1`] = `
<View
  style={
    {
      "backgroundColor": "black",
      "paddingTop": 0,
    }
  }
>
  <View
    animatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": 1334,
            },
          ],
        },
      }
    }
    collapsable={false}
    style={
      {
        "backgroundColor": "white",
        "height": 1334,
        "transform": [
          {
            "translateY": 1334,
          },
        ],
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-around",
          "paddingTop": 10,
        }
      }
    >
      <Text
        style={
          {
            "color": "#484848",
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      >
        Select Your Make or Model
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Text />
      </View>
    </View>
    <TextInput
      placeholder="Type to Select Make"
      style={
        {
          "borderColor": "#d5d5d5",
          "borderWidth": 1,
          "height": 44,
          "marginLeft": 16,
          "marginRight": 16,
          "marginTop": 31,
          "paddingLeft": 16,
        }
      }
    />
    <ActivityIndicator
      size="large"
    />
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="Open"
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Open
      </Text>
    </View>
  </View>
</View>
`;
