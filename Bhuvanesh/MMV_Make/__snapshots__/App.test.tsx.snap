// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Component Not showing Home component: App_1.test.tsx.snap 1`] = `
<View
  style={
    {
      "backgroundColor": "black",
      "paddingTop": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="Open"
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Open
      </Text>
    </View>
  </View>
</View>
`;

exports[`App Component should show home component: App_2.test.tsx.snap 1`] = `
<View
  style={
    {
      "backgroundColor": "black",
      "paddingTop": 0,
    }
  }
>
  <View
    animatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": 1334,
            },
          ],
        },
      }
    }
    collapsable={false}
    style={
      {
        "backgroundColor": "white",
        "height": 1334,
        "transform": [
          {
            "translateY": 1334,
          },
        ],
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 16,
          }
        }
      >
        Select Your Make or Model
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Text />
      </View>
    </View>
    <TextInput
      placeholder="Type to Select Make"
      style={
        {
          "borderColor": "#d5d5d5",
          "borderWidth": 1,
          "height": 44,
          "marginLeft": 16,
          "marginRight": 16,
          "paddingLeft": 16,
        }
      }
    />
    <RCTScrollView
      data={
        [
          [
            "Item aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
            "Item aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
            "Item aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          ],
          [
            "Item 1 1",
            "Item 1 2",
            "Item 1 3",
          ],
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              {
                "overflow": "hidden",
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 54,
                  "justifyContent": "space-around",
                  "opacity": 1,
                }
              }
              testID="drawer"
            >
              <Text
                style={
                  {
                    "fontSize": 15,
                  }
                }
              >
                Maruti Suzuki
              </Text>
              <View
                animatedStyle={
                  {
                    "value": {
                      "transform": [
                        {
                          "rotateZ": "0deg",
                        },
                      ],
                    },
                  }
                }
                collapsable={false}
                style={
                  {
                    "transform": [
                      {
                        "rotateZ": "0deg",
                      },
                    ],
                  }
                }
              >
                <Text />
              </View>
            </View>
            <View
              animatedStyle={
                {
                  "value": {
                    "height": 0,
                  },
                }
              }
              collapsable={false}
              style={
                {
                  "height": 0,
                  "justifyContent": "center",
                  "overflow": "hidden",
                  "paddingLeft": 20,
                }
              }
              testID="AnimatedH"
            >
              <RCTScrollView
                onLayout={[Function]}
                style={
                  {
                    "position": "absolute",
                  }
                }
              >
                <View>
                  <View
                    data={
                      [
                        "Item aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "Item aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "Item aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                      ]
                    }
                    getItem={[Function]}
                    getItemCount={[Function]}
                    keyExtractor={[Function]}
                    onContentSizeChange={[Function]}
                    onLayout={[Function]}
                    onMomentumScrollBegin={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    removeClippedSubviews={false}
                    renderItem={[Function]}
                    scrollEventThrottle={0.0001}
                    stickyHeaderIndices={[]}
                    viewabilityConfigCallbackPairs={[]}
                  >
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View>
                        <Text
                          style={
                            {
                              "fontSize": 15,
                            }
                          }
                        >
                          Item aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                        </Text>
                      </View>
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View>
                        <Text
                          style={
                            {
                              "fontSize": 15,
                            }
                          }
                        >
                          Item aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                        </Text>
                      </View>
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View>
                        <Text
                          style={
                            {
                              "fontSize": 15,
                            }
                          }
                        >
                          Item aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
            <View
              style={
                {
                  "backgroundColor": "#efefef",
                  "height": 1,
                }
              }
            />
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              {
                "overflow": "hidden",
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 54,
                  "justifyContent": "space-around",
                  "opacity": 1,
                }
              }
              testID="drawer"
            >
              <Text
                style={
                  {
                    "fontSize": 15,
                  }
                }
              >
                Maruti Suzuki
              </Text>
              <View
                animatedStyle={
                  {
                    "value": {
                      "transform": [
                        {
                          "rotateZ": "0deg",
                        },
                      ],
                    },
                  }
                }
                collapsable={false}
                style={
                  {
                    "transform": [
                      {
                        "rotateZ": "0deg",
                      },
                    ],
                  }
                }
              >
                <Text />
              </View>
            </View>
            <View
              animatedStyle={
                {
                  "value": {
                    "height": 0,
                  },
                }
              }
              collapsable={false}
              style={
                {
                  "height": 0,
                  "justifyContent": "center",
                  "overflow": "hidden",
                  "paddingLeft": 20,
                }
              }
              testID="AnimatedH"
            >
              <RCTScrollView
                onLayout={[Function]}
                style={
                  {
                    "position": "absolute",
                  }
                }
              >
                <View>
                  <View
                    data={
                      [
                        "Item 1 1",
                        "Item 1 2",
                        "Item 1 3",
                      ]
                    }
                    getItem={[Function]}
                    getItemCount={[Function]}
                    keyExtractor={[Function]}
                    onContentSizeChange={[Function]}
                    onLayout={[Function]}
                    onMomentumScrollBegin={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    removeClippedSubviews={false}
                    renderItem={[Function]}
                    scrollEventThrottle={0.0001}
                    stickyHeaderIndices={[]}
                    viewabilityConfigCallbackPairs={[]}
                  >
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View>
                        <Text
                          style={
                            {
                              "fontSize": 15,
                            }
                          }
                        >
                          Item 1 1
                        </Text>
                      </View>
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View>
                        <Text
                          style={
                            {
                              "fontSize": 15,
                            }
                          }
                        >
                          Item 1 2
                        </Text>
                      </View>
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View>
                        <Text
                          style={
                            {
                              "fontSize": 15,
                            }
                          }
                        >
                          Item 1 3
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
            <View
              style={
                {
                  "backgroundColor": "#efefef",
                  "height": 1,
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="Open"
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Open
      </Text>
    </View>
  </View>
</View>
`;
