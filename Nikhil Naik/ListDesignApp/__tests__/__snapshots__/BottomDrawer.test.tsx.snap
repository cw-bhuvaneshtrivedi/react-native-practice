// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bottom drawer should animate 1`] = `
<View
  animatedStyle={
    {
      "value": {
        "transform": [
          {
            "translateY": 1334,
          },
        ],
      },
    }
  }
  collapsable={false}
  style={
    {
      "backgroundColor": "white",
      "height": 1334,
      "transform": [
        {
          "translateY": 1334,
        },
      ],
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "height": 120,
        "marginBottom": 4,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 16,
      }
    }
  >
    <View
      style={
        [
          {
            "flexDirection": "row",
            "justifyContent": "space-between",
          },
        ]
      }
    >
      <Text
        style={
          {
            "color": "#484848",
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      >
        Select Your Make or Model
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#484848",
                "fontSize": 24,
              },
              undefined,
              {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          î˜¯
        </Text>
      </View>
    </View>
    <TextInput
      placeholder="Type to Select Make "
      style={
        {
          "borderColor": "#d5d5d5",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 2,
          "fontSize": 20,
          "height": 50,
          "marginTop": 10,
          "padding": 5,
          "width": "100%",
        }
      }
    />
  </View>
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      applyWindowCorrection={[Function]}
      canChangeSize={true}
      contentContainerStyle={
        {
          "backgroundColor": undefined,
          "minHeight": 1,
          "minWidth": 1,
          "paddingLeft": 0,
          "paddingRight": 0,
        }
      }
      contentHeight={100}
      contentWidth={300}
      data={
        [
          {
            "makeName": "Hyundai",
            "version": [
              "Creta",
              "Creta",
            ],
          },
          {
            "makeName": "Maruti Suzuki",
            "version": [
              "Ecco",
              "Ecco",
            ],
          },
        ]
      }
      dataProvider={
        DataProvider {
          "_data": [
            {
              "makeName": "Hyundai",
              "version": [
                "Creta",
                "Creta",
              ],
            },
            {
              "makeName": "Maruti Suzuki",
              "version": [
                "Ecco",
                "Ecco",
              ],
            },
          ],
          "_firstIndexToProcess": 0,
          "_hasStableIds": false,
          "_requiresDataChangeHandling": false,
          "_size": 2,
          "getStableId": [Function],
          "rowHasChanged": [Function],
        }
      }
      disableRecycling={false}
      estimatedItemSize={50}
      extendedState={
        {
          "value": -1,
        }
      }
      externalScrollView={[Function]}
      extraData={-1}
      finalRenderAheadOffset={250}
      forceNonDeterministicRendering={true}
      getItemType={[Function]}
      horizontal={false}
      initialOffset={0}
      initialRenderIndex={0}
      isHorizontal={false}
      layoutProvider={
        GridLayoutProviderWithProps {
          "_acceptableRelayoutDelta": 1,
          "_getHeightOrWidth": [Function],
          "_getLayoutTypeForIndex": [Function],
          "_getSpan": [Function],
          "_hasExpired": false,
          "_isHorizontal": false,
          "_lastLayoutManager": GridLayoutManager {
            "_acceptableRelayoutDelta": 1,
            "_getSpan": [Function],
            "_isGridHorizontal": false,
            "_isHorizontal": false,
            "_layoutProvider": [Circular],
            "_layouts": [
              {
                "height": 50,
                "type": "Hyundai",
                "width": 300,
                "x": 0,
                "y": 0,
              },
              {
                "height": 50,
                "type": "Maruti Suzuki",
                "width": 300,
                "x": 0,
                "y": 50,
              },
            ],
            "_maxSpan": 1,
            "_renderWindowSize": {
              "height": 500,
              "width": 300,
            },
            "_totalHeight": 100,
            "_totalWidth": 300,
            "_window": {
              "height": 500,
              "width": 300,
            },
          },
          "_maxSpan": 1,
          "_renderWindowSize": {
            "height": 500,
            "width": 300,
          },
          "_setLayoutForType": [Function],
          "_tempDim": {
            "height": 0,
            "width": 0,
          },
          "averageWindow": AverageWindow {
            "currentAverage": 50,
            "currentCount": 1,
            "inputValues": [
              50,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
            ],
            "nextIndex": 1,
          },
          "defaultEstimatedItemSize": 100,
          "layoutObject": {
            "size": undefined,
            "span": undefined,
          },
          "props": {
            "data": [
              {
                "makeName": "Hyundai",
                "version": [
                  "Creta",
                  "Creta",
                ],
              },
              {
                "makeName": "Maruti Suzuki",
                "version": [
                  "Ecco",
                  "Ecco",
                ],
              },
            ],
            "estimatedItemSize": 50,
            "estimatedListSize": {
              "height": 500,
              "width": 300,
            },
            "extraData": -1,
            "getItemType": [Function],
            "numColumns": 1,
            "renderItem": [Function],
          },
          "renderWindowInsets": {
            "height": 0,
            "width": 0,
          },
          "shouldRefreshWithAnchoring": true,
        }
      }
      layoutSize={
        {
          "height": 500,
          "width": 300,
        }
      }
      maxRenderAhead={750}
      numColumns={1}
      onEndReached={[Function]}
      onEndReachedThreshold={0}
      onEndReachedThresholdRelative={0}
      onItemLayout={[Function]}
      onLayout={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onSizeChanged={[Function]}
      onVisibleIndicesChanged={[Function]}
      removeClippedSubviews={false}
      renderAheadOffset={0}
      renderAheadStep={250}
      renderContentContainer={[Function]}
      renderItem={[Function]}
      renderItemContainer={[Function]}
      rowRenderer={[Function]}
      scrollEventThrottle={16}
      scrollThrottle={16}
      scrollViewProps={
        {
          "contentContainerStyle": {
            "backgroundColor": undefined,
            "minHeight": 1,
            "minWidth": 1,
            "paddingLeft": 0,
            "paddingRight": 0,
          },
          "onLayout": [Function],
          "onScrollBeginDrag": [Function],
          "refreshControl": undefined,
          "style": {
            "minHeight": 1,
            "minWidth": 1,
          },
        }
      }
      style={
        {
          "minHeight": 1,
          "minWidth": 1,
        }
      }
      suppressBoundedSizeException={true}
      windowCorrectionConfig={
        {
          "applyToInitialOffset": true,
          "applyToItemScroll": true,
          "value": {
            "endCorrection": 0,
            "startCorrection": 0,
            "windowShift": -0,
          },
        }
      }
    >
      <View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "paddingLeft": 0,
                "paddingTop": 0,
              }
            }
          />
          <View
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <AutoLayoutView
            enableInstrumentation={false}
            horizontal={false}
            onBlankAreaEvent={[Function]}
            onLayout={[Function]}
            renderAheadOffset={0}
            scrollOffset={0}
            style={
              {
                "height": 100,
                "width": 300,
              }
            }
            windowSize={500}
          >
            <CellContainer
              index={0}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 300,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <RCTScrollView
                  testID="accordion"
                >
                  <View>
                    <View
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": undefined,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                      testID="accordionButton"
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "height": 50,
                            "justifyContent": "space-between",
                            "paddingLeft": 28,
                            "paddingRight": 30,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "color": "#484848",
                              "fontSize": 15,
                            }
                          }
                        >
                          Hyundai
                        </Text>
                        <View
                          animatedStyle={
                            {
                              "value": {
                                "transform": [
                                  {
                                    "rotateZ": "0deg",
                                  },
                                ],
                              },
                            }
                          }
                          collapsable={false}
                          style={
                            {
                              "transform": [
                                {
                                  "rotateZ": "0deg",
                                },
                              ],
                            }
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            selectable={false}
                            style={
                              [
                                {
                                  "color": "#aaaaaa",
                                  "fontSize": 30,
                                },
                                undefined,
                                {
                                  "fontFamily": "feather",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                {},
                              ]
                            }
                          >
                            ï„®
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        {
                          "backgroundColor": "#efefef",
                          "height": 2,
                          "width": "100%",
                        }
                      }
                    />
                    <View
                      animatedStyle={
                        {
                          "value": {
                            "height": 0,
                          },
                        }
                      }
                      collapsable={false}
                      style={
                        {
                          "height": 0,
                          "overflow": "hidden",
                        }
                      }
                      testID="card"
                    >
                      <View
                        style={
                          {
                            "position": "absolute",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                              "overflow": "hidden",
                            }
                          }
                        >
                          <RCTScrollView
                            applyWindowCorrection={[Function]}
                            canChangeSize={true}
                            contentContainerStyle={
                              {
                                "backgroundColor": undefined,
                                "minHeight": 1,
                                "minWidth": 1,
                                "paddingLeft": 0,
                                "paddingRight": 0,
                              }
                            }
                            contentHeight={0}
                            contentWidth={0}
                            data={
                              [
                                "Creta",
                                "Creta",
                              ]
                            }
                            dataProvider={
                              DataProvider {
                                "_data": [
                                  "Creta",
                                  "Creta",
                                ],
                                "_firstIndexToProcess": 0,
                                "_hasStableIds": false,
                                "_requiresDataChangeHandling": false,
                                "_size": 2,
                                "getStableId": [Function],
                                "rowHasChanged": [Function],
                              }
                            }
                            disableRecycling={false}
                            estimatedItemSize={50}
                            extendedState={{}}
                            externalScrollView={[Function]}
                            finalRenderAheadOffset={250}
                            forceNonDeterministicRendering={true}
                            horizontal={false}
                            initialOffset={0}
                            initialRenderIndex={0}
                            isHorizontal={false}
                            layoutProvider={
                              GridLayoutProviderWithProps {
                                "_acceptableRelayoutDelta": 1,
                                "_getHeightOrWidth": [Function],
                                "_getLayoutTypeForIndex": [Function],
                                "_getSpan": [Function],
                                "_hasExpired": false,
                                "_maxSpan": 1,
                                "_setLayoutForType": [Function],
                                "_tempDim": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "averageWindow": AverageWindow {
                                  "currentAverage": 50,
                                  "currentCount": 1,
                                  "inputValues": [
                                    50,
                                  ],
                                  "nextIndex": 1,
                                },
                                "defaultEstimatedItemSize": 100,
                                "layoutObject": {
                                  "size": undefined,
                                  "span": undefined,
                                },
                                "props": {
                                  "data": [
                                    "Creta",
                                    "Creta",
                                  ],
                                  "estimatedItemSize": 50,
                                  "numColumns": 1,
                                  "onLayout": [Function],
                                  "renderItem": [Function],
                                },
                                "renderWindowInsets": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "shouldRefreshWithAnchoring": true,
                              }
                            }
                            maxRenderAhead={750}
                            numColumns={1}
                            onEndReached={[Function]}
                            onEndReachedThreshold={0}
                            onEndReachedThresholdRelative={0}
                            onItemLayout={[Function]}
                            onLayout={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onSizeChanged={[Function]}
                            onVisibleIndicesChanged={[Function]}
                            removeClippedSubviews={false}
                            renderAheadOffset={0}
                            renderAheadStep={250}
                            renderContentContainer={[Function]}
                            renderItem={[Function]}
                            renderItemContainer={[Function]}
                            rowRenderer={[Function]}
                            scrollEventThrottle={16}
                            scrollThrottle={16}
                            scrollViewProps={
                              {
                                "contentContainerStyle": {
                                  "backgroundColor": undefined,
                                  "minHeight": 1,
                                  "minWidth": 1,
                                  "paddingLeft": 0,
                                  "paddingRight": 0,
                                },
                                "onLayout": [Function],
                                "onScrollBeginDrag": [Function],
                                "refreshControl": undefined,
                                "style": {
                                  "minHeight": 1,
                                  "minWidth": 1,
                                },
                              }
                            }
                            style={
                              {
                                "minHeight": 1,
                                "minWidth": 1,
                              }
                            }
                            suppressBoundedSizeException={true}
                            windowCorrectionConfig={
                              {
                                "applyToInitialOffset": true,
                                "applyToItemScroll": true,
                                "value": {
                                  "endCorrection": 0,
                                  "startCorrection": 0,
                                  "windowShift": -0,
                                },
                              }
                            }
                          >
                            <View>
                              <View
                                style={
                                  {
                                    "flexDirection": "column",
                                  }
                                }
                              >
                                <AutoLayoutView
                                  enableInstrumentation={false}
                                  horizontal={false}
                                  onBlankAreaEvent={[Function]}
                                  onLayout={[Function]}
                                  renderAheadOffset={0}
                                  scrollOffset={0}
                                  style={
                                    {
                                      "height": 0,
                                      "width": 0,
                                    }
                                  }
                                  windowSize={0}
                                />
                              </View>
                            </View>
                          </RCTScrollView>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </CellContainer>
            <CellContainer
              index={1}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 50,
                  "width": 300,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <RCTScrollView
                  testID="accordion"
                >
                  <View>
                    <View
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": undefined,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                      testID="accordionButton"
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "height": 50,
                            "justifyContent": "space-between",
                            "paddingLeft": 28,
                            "paddingRight": 30,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "color": "#484848",
                              "fontSize": 15,
                            }
                          }
                        >
                          Maruti Suzuki
                        </Text>
                        <View
                          animatedStyle={
                            {
                              "value": {
                                "transform": [
                                  {
                                    "rotateZ": "0deg",
                                  },
                                ],
                              },
                            }
                          }
                          collapsable={false}
                          style={
                            {
                              "transform": [
                                {
                                  "rotateZ": "0deg",
                                },
                              ],
                            }
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            selectable={false}
                            style={
                              [
                                {
                                  "color": "#aaaaaa",
                                  "fontSize": 30,
                                },
                                undefined,
                                {
                                  "fontFamily": "feather",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                {},
                              ]
                            }
                          >
                            ï„®
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        {
                          "backgroundColor": "#efefef",
                          "height": 2,
                          "width": "100%",
                        }
                      }
                    />
                    <View
                      animatedStyle={
                        {
                          "value": {
                            "height": 0,
                          },
                        }
                      }
                      collapsable={false}
                      style={
                        {
                          "height": 0,
                          "overflow": "hidden",
                        }
                      }
                      testID="card"
                    >
                      <View
                        style={
                          {
                            "position": "absolute",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                              "overflow": "hidden",
                            }
                          }
                        >
                          <RCTScrollView
                            applyWindowCorrection={[Function]}
                            canChangeSize={true}
                            contentContainerStyle={
                              {
                                "backgroundColor": undefined,
                                "minHeight": 1,
                                "minWidth": 1,
                                "paddingLeft": 0,
                                "paddingRight": 0,
                              }
                            }
                            contentHeight={0}
                            contentWidth={0}
                            data={
                              [
                                "Ecco",
                                "Ecco",
                              ]
                            }
                            dataProvider={
                              DataProvider {
                                "_data": [
                                  "Ecco",
                                  "Ecco",
                                ],
                                "_firstIndexToProcess": 0,
                                "_hasStableIds": false,
                                "_requiresDataChangeHandling": false,
                                "_size": 2,
                                "getStableId": [Function],
                                "rowHasChanged": [Function],
                              }
                            }
                            disableRecycling={false}
                            estimatedItemSize={50}
                            extendedState={{}}
                            externalScrollView={[Function]}
                            finalRenderAheadOffset={250}
                            forceNonDeterministicRendering={true}
                            horizontal={false}
                            initialOffset={0}
                            initialRenderIndex={0}
                            isHorizontal={false}
                            layoutProvider={
                              GridLayoutProviderWithProps {
                                "_acceptableRelayoutDelta": 1,
                                "_getHeightOrWidth": [Function],
                                "_getLayoutTypeForIndex": [Function],
                                "_getSpan": [Function],
                                "_hasExpired": false,
                                "_maxSpan": 1,
                                "_setLayoutForType": [Function],
                                "_tempDim": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "averageWindow": AverageWindow {
                                  "currentAverage": 50,
                                  "currentCount": 1,
                                  "inputValues": [
                                    50,
                                  ],
                                  "nextIndex": 1,
                                },
                                "defaultEstimatedItemSize": 100,
                                "layoutObject": {
                                  "size": undefined,
                                  "span": undefined,
                                },
                                "props": {
                                  "data": [
                                    "Ecco",
                                    "Ecco",
                                  ],
                                  "estimatedItemSize": 50,
                                  "numColumns": 1,
                                  "onLayout": [Function],
                                  "renderItem": [Function],
                                },
                                "renderWindowInsets": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "shouldRefreshWithAnchoring": true,
                              }
                            }
                            maxRenderAhead={750}
                            numColumns={1}
                            onEndReached={[Function]}
                            onEndReachedThreshold={0}
                            onEndReachedThresholdRelative={0}
                            onItemLayout={[Function]}
                            onLayout={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onSizeChanged={[Function]}
                            onVisibleIndicesChanged={[Function]}
                            removeClippedSubviews={false}
                            renderAheadOffset={0}
                            renderAheadStep={250}
                            renderContentContainer={[Function]}
                            renderItem={[Function]}
                            renderItemContainer={[Function]}
                            rowRenderer={[Function]}
                            scrollEventThrottle={16}
                            scrollThrottle={16}
                            scrollViewProps={
                              {
                                "contentContainerStyle": {
                                  "backgroundColor": undefined,
                                  "minHeight": 1,
                                  "minWidth": 1,
                                  "paddingLeft": 0,
                                  "paddingRight": 0,
                                },
                                "onLayout": [Function],
                                "onScrollBeginDrag": [Function],
                                "refreshControl": undefined,
                                "style": {
                                  "minHeight": 1,
                                  "minWidth": 1,
                                },
                              }
                            }
                            style={
                              {
                                "minHeight": 1,
                                "minWidth": 1,
                              }
                            }
                            suppressBoundedSizeException={true}
                            windowCorrectionConfig={
                              {
                                "applyToInitialOffset": true,
                                "applyToItemScroll": true,
                                "value": {
                                  "endCorrection": 0,
                                  "startCorrection": 0,
                                  "windowShift": -0,
                                },
                              }
                            }
                          >
                            <View>
                              <View
                                style={
                                  {
                                    "flexDirection": "column",
                                  }
                                }
                              >
                                <AutoLayoutView
                                  enableInstrumentation={false}
                                  horizontal={false}
                                  onBlankAreaEvent={[Function]}
                                  onLayout={[Function]}
                                  renderAheadOffset={0}
                                  scrollOffset={0}
                                  style={
                                    {
                                      "height": 0,
                                      "width": 0,
                                    }
                                  }
                                  windowSize={0}
                                />
                              </View>
                            </View>
                          </RCTScrollView>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </CellContainer>
          </AutoLayoutView>
          <CellContainer
            index={-1}
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <View
            style={
              {
                "paddingBottom": 0,
                "paddingRight": 0,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`first  1`] = `
<View
  animatedStyle={
    {
      "value": {
        "transform": [
          {
            "translateY": 1334,
          },
        ],
      },
    }
  }
  collapsable={false}
  style={
    {
      "backgroundColor": "white",
      "height": 1334,
      "transform": [
        {
          "translateY": 1334,
        },
      ],
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "height": 120,
        "marginBottom": 4,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 16,
      }
    }
  >
    <View
      style={
        [
          {
            "flexDirection": "row",
            "justifyContent": "space-between",
          },
        ]
      }
    >
      <Text
        style={
          {
            "color": "#484848",
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      >
        Select Your Make or Model
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#484848",
                "fontSize": 24,
              },
              undefined,
              {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          î˜¯
        </Text>
      </View>
    </View>
    <TextInput
      placeholder="Type to Select Make "
      style={
        {
          "borderColor": "#d5d5d5",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 2,
          "fontSize": 20,
          "height": 50,
          "marginTop": 10,
          "padding": 5,
          "width": "100%",
        }
      }
    />
  </View>
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      applyWindowCorrection={[Function]}
      canChangeSize={true}
      contentContainerStyle={
        {
          "backgroundColor": undefined,
          "minHeight": 1,
          "minWidth": 1,
          "paddingLeft": 0,
          "paddingRight": 0,
        }
      }
      contentHeight={100}
      contentWidth={300}
      data={
        [
          {
            "makeName": "Hyundai",
            "version": [
              "Creta",
              "Creta",
            ],
          },
          {
            "makeName": "Maruti Suzuki",
            "version": [
              "Ecco",
              "Ecco",
            ],
          },
        ]
      }
      dataProvider={
        DataProvider {
          "_data": [
            {
              "makeName": "Hyundai",
              "version": [
                "Creta",
                "Creta",
              ],
            },
            {
              "makeName": "Maruti Suzuki",
              "version": [
                "Ecco",
                "Ecco",
              ],
            },
          ],
          "_firstIndexToProcess": 0,
          "_hasStableIds": false,
          "_requiresDataChangeHandling": false,
          "_size": 2,
          "getStableId": [Function],
          "rowHasChanged": [Function],
        }
      }
      disableRecycling={false}
      estimatedItemSize={50}
      extendedState={
        {
          "value": -1,
        }
      }
      externalScrollView={[Function]}
      extraData={-1}
      finalRenderAheadOffset={250}
      forceNonDeterministicRendering={true}
      getItemType={[Function]}
      horizontal={false}
      initialOffset={0}
      initialRenderIndex={0}
      isHorizontal={false}
      layoutProvider={
        GridLayoutProviderWithProps {
          "_acceptableRelayoutDelta": 1,
          "_getHeightOrWidth": [Function],
          "_getLayoutTypeForIndex": [Function],
          "_getSpan": [Function],
          "_hasExpired": false,
          "_isHorizontal": false,
          "_lastLayoutManager": GridLayoutManager {
            "_acceptableRelayoutDelta": 1,
            "_getSpan": [Function],
            "_isGridHorizontal": false,
            "_isHorizontal": false,
            "_layoutProvider": [Circular],
            "_layouts": [
              {
                "height": 50,
                "type": "Hyundai",
                "width": 300,
                "x": 0,
                "y": 0,
              },
              {
                "height": 50,
                "type": "Maruti Suzuki",
                "width": 300,
                "x": 0,
                "y": 50,
              },
            ],
            "_maxSpan": 1,
            "_renderWindowSize": {
              "height": 500,
              "width": 300,
            },
            "_totalHeight": 100,
            "_totalWidth": 300,
            "_window": {
              "height": 500,
              "width": 300,
            },
          },
          "_maxSpan": 1,
          "_renderWindowSize": {
            "height": 500,
            "width": 300,
          },
          "_setLayoutForType": [Function],
          "_tempDim": {
            "height": 0,
            "width": 0,
          },
          "averageWindow": AverageWindow {
            "currentAverage": 50,
            "currentCount": 1,
            "inputValues": [
              50,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
            ],
            "nextIndex": 1,
          },
          "defaultEstimatedItemSize": 100,
          "layoutObject": {
            "size": undefined,
            "span": undefined,
          },
          "props": {
            "data": [
              {
                "makeName": "Hyundai",
                "version": [
                  "Creta",
                  "Creta",
                ],
              },
              {
                "makeName": "Maruti Suzuki",
                "version": [
                  "Ecco",
                  "Ecco",
                ],
              },
            ],
            "estimatedItemSize": 50,
            "estimatedListSize": {
              "height": 500,
              "width": 300,
            },
            "extraData": -1,
            "getItemType": [Function],
            "numColumns": 1,
            "renderItem": [Function],
          },
          "renderWindowInsets": {
            "height": 0,
            "width": 0,
          },
          "shouldRefreshWithAnchoring": true,
        }
      }
      layoutSize={
        {
          "height": 500,
          "width": 300,
        }
      }
      maxRenderAhead={750}
      numColumns={1}
      onEndReached={[Function]}
      onEndReachedThreshold={0}
      onEndReachedThresholdRelative={0}
      onItemLayout={[Function]}
      onLayout={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onSizeChanged={[Function]}
      onVisibleIndicesChanged={[Function]}
      removeClippedSubviews={false}
      renderAheadOffset={0}
      renderAheadStep={250}
      renderContentContainer={[Function]}
      renderItem={[Function]}
      renderItemContainer={[Function]}
      rowRenderer={[Function]}
      scrollEventThrottle={16}
      scrollThrottle={16}
      scrollViewProps={
        {
          "contentContainerStyle": {
            "backgroundColor": undefined,
            "minHeight": 1,
            "minWidth": 1,
            "paddingLeft": 0,
            "paddingRight": 0,
          },
          "onLayout": [Function],
          "onScrollBeginDrag": [Function],
          "refreshControl": undefined,
          "style": {
            "minHeight": 1,
            "minWidth": 1,
          },
        }
      }
      style={
        {
          "minHeight": 1,
          "minWidth": 1,
        }
      }
      suppressBoundedSizeException={true}
      windowCorrectionConfig={
        {
          "applyToInitialOffset": true,
          "applyToItemScroll": true,
          "value": {
            "endCorrection": 0,
            "startCorrection": 0,
            "windowShift": -0,
          },
        }
      }
    >
      <View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "paddingLeft": 0,
                "paddingTop": 0,
              }
            }
          />
          <View
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <AutoLayoutView
            enableInstrumentation={false}
            horizontal={false}
            onBlankAreaEvent={[Function]}
            onLayout={[Function]}
            renderAheadOffset={0}
            scrollOffset={0}
            style={
              {
                "height": 100,
                "width": 300,
              }
            }
            windowSize={500}
          >
            <CellContainer
              index={0}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 300,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <RCTScrollView
                  testID="accordion"
                >
                  <View>
                    <View
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": undefined,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                      testID="accordionButton"
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "height": 50,
                            "justifyContent": "space-between",
                            "paddingLeft": 28,
                            "paddingRight": 30,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "color": "#484848",
                              "fontSize": 15,
                            }
                          }
                        >
                          Hyundai
                        </Text>
                        <View
                          animatedStyle={
                            {
                              "value": {
                                "transform": [
                                  {
                                    "rotateZ": "0deg",
                                  },
                                ],
                              },
                            }
                          }
                          collapsable={false}
                          style={
                            {
                              "transform": [
                                {
                                  "rotateZ": "0deg",
                                },
                              ],
                            }
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            selectable={false}
                            style={
                              [
                                {
                                  "color": "#aaaaaa",
                                  "fontSize": 30,
                                },
                                undefined,
                                {
                                  "fontFamily": "feather",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                {},
                              ]
                            }
                          >
                            ï„®
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        {
                          "backgroundColor": "#efefef",
                          "height": 2,
                          "width": "100%",
                        }
                      }
                    />
                    <View
                      animatedStyle={
                        {
                          "value": {
                            "height": 0,
                          },
                        }
                      }
                      collapsable={false}
                      style={
                        {
                          "height": 0,
                          "overflow": "hidden",
                        }
                      }
                      testID="card"
                    >
                      <View
                        style={
                          {
                            "position": "absolute",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                              "overflow": "hidden",
                            }
                          }
                        >
                          <RCTScrollView
                            applyWindowCorrection={[Function]}
                            canChangeSize={true}
                            contentContainerStyle={
                              {
                                "backgroundColor": undefined,
                                "minHeight": 1,
                                "minWidth": 1,
                                "paddingLeft": 0,
                                "paddingRight": 0,
                              }
                            }
                            contentHeight={0}
                            contentWidth={0}
                            data={
                              [
                                "Creta",
                                "Creta",
                              ]
                            }
                            dataProvider={
                              DataProvider {
                                "_data": [
                                  "Creta",
                                  "Creta",
                                ],
                                "_firstIndexToProcess": 0,
                                "_hasStableIds": false,
                                "_requiresDataChangeHandling": false,
                                "_size": 2,
                                "getStableId": [Function],
                                "rowHasChanged": [Function],
                              }
                            }
                            disableRecycling={false}
                            estimatedItemSize={50}
                            extendedState={{}}
                            externalScrollView={[Function]}
                            finalRenderAheadOffset={250}
                            forceNonDeterministicRendering={true}
                            horizontal={false}
                            initialOffset={0}
                            initialRenderIndex={0}
                            isHorizontal={false}
                            layoutProvider={
                              GridLayoutProviderWithProps {
                                "_acceptableRelayoutDelta": 1,
                                "_getHeightOrWidth": [Function],
                                "_getLayoutTypeForIndex": [Function],
                                "_getSpan": [Function],
                                "_hasExpired": false,
                                "_maxSpan": 1,
                                "_setLayoutForType": [Function],
                                "_tempDim": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "averageWindow": AverageWindow {
                                  "currentAverage": 50,
                                  "currentCount": 1,
                                  "inputValues": [
                                    50,
                                  ],
                                  "nextIndex": 1,
                                },
                                "defaultEstimatedItemSize": 100,
                                "layoutObject": {
                                  "size": undefined,
                                  "span": undefined,
                                },
                                "props": {
                                  "data": [
                                    "Creta",
                                    "Creta",
                                  ],
                                  "estimatedItemSize": 50,
                                  "numColumns": 1,
                                  "onLayout": [Function],
                                  "renderItem": [Function],
                                },
                                "renderWindowInsets": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "shouldRefreshWithAnchoring": true,
                              }
                            }
                            maxRenderAhead={750}
                            numColumns={1}
                            onEndReached={[Function]}
                            onEndReachedThreshold={0}
                            onEndReachedThresholdRelative={0}
                            onItemLayout={[Function]}
                            onLayout={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onSizeChanged={[Function]}
                            onVisibleIndicesChanged={[Function]}
                            removeClippedSubviews={false}
                            renderAheadOffset={0}
                            renderAheadStep={250}
                            renderContentContainer={[Function]}
                            renderItem={[Function]}
                            renderItemContainer={[Function]}
                            rowRenderer={[Function]}
                            scrollEventThrottle={16}
                            scrollThrottle={16}
                            scrollViewProps={
                              {
                                "contentContainerStyle": {
                                  "backgroundColor": undefined,
                                  "minHeight": 1,
                                  "minWidth": 1,
                                  "paddingLeft": 0,
                                  "paddingRight": 0,
                                },
                                "onLayout": [Function],
                                "onScrollBeginDrag": [Function],
                                "refreshControl": undefined,
                                "style": {
                                  "minHeight": 1,
                                  "minWidth": 1,
                                },
                              }
                            }
                            style={
                              {
                                "minHeight": 1,
                                "minWidth": 1,
                              }
                            }
                            suppressBoundedSizeException={true}
                            windowCorrectionConfig={
                              {
                                "applyToInitialOffset": true,
                                "applyToItemScroll": true,
                                "value": {
                                  "endCorrection": 0,
                                  "startCorrection": 0,
                                  "windowShift": -0,
                                },
                              }
                            }
                          >
                            <View>
                              <View
                                style={
                                  {
                                    "flexDirection": "column",
                                  }
                                }
                              >
                                <AutoLayoutView
                                  enableInstrumentation={false}
                                  horizontal={false}
                                  onBlankAreaEvent={[Function]}
                                  onLayout={[Function]}
                                  renderAheadOffset={0}
                                  scrollOffset={0}
                                  style={
                                    {
                                      "height": 0,
                                      "width": 0,
                                    }
                                  }
                                  windowSize={0}
                                />
                              </View>
                            </View>
                          </RCTScrollView>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </CellContainer>
            <CellContainer
              index={1}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 50,
                  "width": 300,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <RCTScrollView
                  testID="accordion"
                >
                  <View>
                    <View
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": undefined,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                      testID="accordionButton"
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "height": 50,
                            "justifyContent": "space-between",
                            "paddingLeft": 28,
                            "paddingRight": 30,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "color": "#484848",
                              "fontSize": 15,
                            }
                          }
                        >
                          Maruti Suzuki
                        </Text>
                        <View
                          animatedStyle={
                            {
                              "value": {
                                "transform": [
                                  {
                                    "rotateZ": "0deg",
                                  },
                                ],
                              },
                            }
                          }
                          collapsable={false}
                          style={
                            {
                              "transform": [
                                {
                                  "rotateZ": "0deg",
                                },
                              ],
                            }
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            selectable={false}
                            style={
                              [
                                {
                                  "color": "#aaaaaa",
                                  "fontSize": 30,
                                },
                                undefined,
                                {
                                  "fontFamily": "feather",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                {},
                              ]
                            }
                          >
                            ï„®
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        {
                          "backgroundColor": "#efefef",
                          "height": 2,
                          "width": "100%",
                        }
                      }
                    />
                    <View
                      animatedStyle={
                        {
                          "value": {
                            "height": 0,
                          },
                        }
                      }
                      collapsable={false}
                      style={
                        {
                          "height": 0,
                          "overflow": "hidden",
                        }
                      }
                      testID="card"
                    >
                      <View
                        style={
                          {
                            "position": "absolute",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                              "overflow": "hidden",
                            }
                          }
                        >
                          <RCTScrollView
                            applyWindowCorrection={[Function]}
                            canChangeSize={true}
                            contentContainerStyle={
                              {
                                "backgroundColor": undefined,
                                "minHeight": 1,
                                "minWidth": 1,
                                "paddingLeft": 0,
                                "paddingRight": 0,
                              }
                            }
                            contentHeight={0}
                            contentWidth={0}
                            data={
                              [
                                "Ecco",
                                "Ecco",
                              ]
                            }
                            dataProvider={
                              DataProvider {
                                "_data": [
                                  "Ecco",
                                  "Ecco",
                                ],
                                "_firstIndexToProcess": 0,
                                "_hasStableIds": false,
                                "_requiresDataChangeHandling": false,
                                "_size": 2,
                                "getStableId": [Function],
                                "rowHasChanged": [Function],
                              }
                            }
                            disableRecycling={false}
                            estimatedItemSize={50}
                            extendedState={{}}
                            externalScrollView={[Function]}
                            finalRenderAheadOffset={250}
                            forceNonDeterministicRendering={true}
                            horizontal={false}
                            initialOffset={0}
                            initialRenderIndex={0}
                            isHorizontal={false}
                            layoutProvider={
                              GridLayoutProviderWithProps {
                                "_acceptableRelayoutDelta": 1,
                                "_getHeightOrWidth": [Function],
                                "_getLayoutTypeForIndex": [Function],
                                "_getSpan": [Function],
                                "_hasExpired": false,
                                "_maxSpan": 1,
                                "_setLayoutForType": [Function],
                                "_tempDim": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "averageWindow": AverageWindow {
                                  "currentAverage": 50,
                                  "currentCount": 1,
                                  "inputValues": [
                                    50,
                                  ],
                                  "nextIndex": 1,
                                },
                                "defaultEstimatedItemSize": 100,
                                "layoutObject": {
                                  "size": undefined,
                                  "span": undefined,
                                },
                                "props": {
                                  "data": [
                                    "Ecco",
                                    "Ecco",
                                  ],
                                  "estimatedItemSize": 50,
                                  "numColumns": 1,
                                  "onLayout": [Function],
                                  "renderItem": [Function],
                                },
                                "renderWindowInsets": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "shouldRefreshWithAnchoring": true,
                              }
                            }
                            maxRenderAhead={750}
                            numColumns={1}
                            onEndReached={[Function]}
                            onEndReachedThreshold={0}
                            onEndReachedThresholdRelative={0}
                            onItemLayout={[Function]}
                            onLayout={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onSizeChanged={[Function]}
                            onVisibleIndicesChanged={[Function]}
                            removeClippedSubviews={false}
                            renderAheadOffset={0}
                            renderAheadStep={250}
                            renderContentContainer={[Function]}
                            renderItem={[Function]}
                            renderItemContainer={[Function]}
                            rowRenderer={[Function]}
                            scrollEventThrottle={16}
                            scrollThrottle={16}
                            scrollViewProps={
                              {
                                "contentContainerStyle": {
                                  "backgroundColor": undefined,
                                  "minHeight": 1,
                                  "minWidth": 1,
                                  "paddingLeft": 0,
                                  "paddingRight": 0,
                                },
                                "onLayout": [Function],
                                "onScrollBeginDrag": [Function],
                                "refreshControl": undefined,
                                "style": {
                                  "minHeight": 1,
                                  "minWidth": 1,
                                },
                              }
                            }
                            style={
                              {
                                "minHeight": 1,
                                "minWidth": 1,
                              }
                            }
                            suppressBoundedSizeException={true}
                            windowCorrectionConfig={
                              {
                                "applyToInitialOffset": true,
                                "applyToItemScroll": true,
                                "value": {
                                  "endCorrection": 0,
                                  "startCorrection": 0,
                                  "windowShift": -0,
                                },
                              }
                            }
                          >
                            <View>
                              <View
                                style={
                                  {
                                    "flexDirection": "column",
                                  }
                                }
                              >
                                <AutoLayoutView
                                  enableInstrumentation={false}
                                  horizontal={false}
                                  onBlankAreaEvent={[Function]}
                                  onLayout={[Function]}
                                  renderAheadOffset={0}
                                  scrollOffset={0}
                                  style={
                                    {
                                      "height": 0,
                                      "width": 0,
                                    }
                                  }
                                  windowSize={0}
                                />
                              </View>
                            </View>
                          </RCTScrollView>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </CellContainer>
          </AutoLayoutView>
          <CellContainer
            index={-1}
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <View
            style={
              {
                "paddingBottom": 0,
                "paddingRight": 0,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
